{"ast":null,"code":"// import { SHOP_DATA } from \"./shop.data\";\nimport ShopActionTypes from \"./shop.types\";\nconst initialState = {\n  collections: null,\n  isFetching: false,\n  errorMessage: undefined\n};\n\nconst shopReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ShopActionTypes.FETCH_COLLECTIONS_START:\n      {\n        return { ...state,\n          isFetching: true\n        };\n      }\n\n    case ShopActionTypes.FETCH_COLLECTIONS_SUCCESS:\n      return { ...state,\n        collections: action.payload,\n        isFetching: false\n      };\n\n    case ShopActionTypes.FETCH_COLLECTIONS_FAILURE:\n      return { ...state,\n        isFetching: false,\n        errorMessage: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["/Users/iulian.carnaru/Desktop/crwn-shop-promise-sagas/client/src/redux/shop/shop.reducer.js"],"names":["ShopActionTypes","initialState","collections","isFetching","errorMessage","undefined","shopReducer","state","action","type","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","payload","FETCH_COLLECTIONS_FAILURE"],"mappings":"AAAA;AACA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,IADM;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,YAAY,EAAEC;AAHK,CAArB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,eAAe,CAACU,uBAArB;AAA8C;AAC5C,eAAO,EACL,GAAGH,KADE;AAELJ,UAAAA,UAAU,EAAE;AAFP,SAAP;AAID;;AACD,SAAKH,eAAe,CAACW,yBAArB;AACE,aAAO,EACL,GAAGJ,KADE;AAELL,QAAAA,WAAW,EAAEM,MAAM,CAACI,OAFf;AAGLT,QAAAA,UAAU,EAAE;AAHP,OAAP;;AAKF,SAAKH,eAAe,CAACa,yBAArB;AACE,aAAO,EACL,GAAGN,KADE;AAELJ,QAAAA,UAAU,EAAE,KAFP;AAGLC,QAAAA,YAAY,EAAEI,MAAM,CAACI;AAHhB,OAAP;;AAKF;AACE,aAAOL,KAAP;AApBJ;AAsBD,CAvBD;;AAyBA,eAAeD,WAAf","sourcesContent":["// import { SHOP_DATA } from \"./shop.data\";\nimport ShopActionTypes from \"./shop.types\";\n\nconst initialState = {\n  collections: null,\n  isFetching: false,\n  errorMessage: undefined,\n};\n\nconst shopReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ShopActionTypes.FETCH_COLLECTIONS_START: {\n      return {\n        ...state,\n        isFetching: true,\n      };\n    }\n    case ShopActionTypes.FETCH_COLLECTIONS_SUCCESS:\n      return {\n        ...state,\n        collections: action.payload,\n        isFetching: false,\n      };\n    case ShopActionTypes.FETCH_COLLECTIONS_FAILURE:\n      return {\n        ...state,\n        isFetching: false,\n        errorMessage: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;\n"]},"metadata":{},"sourceType":"module"}