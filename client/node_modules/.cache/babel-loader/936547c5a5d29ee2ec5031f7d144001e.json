{"ast":null,"code":"import { createSelector } from \"reselect\"; // const COLLECTION_ID_MAP = {\n//   hats: 1,\n//   sneakers: 2,\n//   jackets: 3,\n//   womens: 4,\n//   mens: 5,\n// };\n\nconst selectShop = state => state.shop;\n\nexport const selectShopCollections = createSelector([selectShop], ({\n  collections\n}) => collections);\nexport const selectCollectionForPreview = createSelector([selectShopCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []); // when data was array\n// export const selectCollection = (collectionUrlParam) =>\n//   createSelector([selectShopCollections], (collections) =>\n//     collections.find(\n//       (collection) => collection.id === COLLECTION_ID_MAP[collectionUrlParam]\n//     )\n//   );\n// after data normalisation (converted to object)\n\nexport const selectCollection = collectionUrlParam => createSelector([selectShopCollections], collections => collections ? collections[collectionUrlParam] : null);\nexport const selectIsCollectionsFetching = createSelector([selectShop], ({\n  isFetching\n}) => isFetching);\nexport const selectIsCollectionsLoaded = createSelector([selectShop], ({\n  collections\n}) => !!collections);","map":{"version":3,"sources":["/Users/iulian.carnaru/Desktop/crwn-shop-promise-sagas/src/redux/shop/shop.selectors.js"],"names":["createSelector","selectShop","state","shop","selectShopCollections","collections","selectCollectionForPreview","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionsFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,qBAAqB,GAAGJ,cAAc,CACjD,CAACC,UAAD,CADiD,EAEjD,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAqBA,WAF4B,CAA5C;AAKP,OAAO,MAAMC,0BAA0B,GAAGN,cAAc,CACtD,CAACI,qBAAD,CADsD,EAErDC,WAAD,IACEA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA8BC,GAAD,IAASL,WAAW,CAACK,GAAD,CAAjD,CAAH,GAA6D,EAHpB,CAAjD,C,CAMP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,OAAO,MAAMC,gBAAgB,GAAIC,kBAAD,IAC9BZ,cAAc,CAAC,CAACI,qBAAD,CAAD,EAA2BC,WAAD,IACtCA,WAAW,GAAGA,WAAW,CAACO,kBAAD,CAAd,GAAqC,IADpC,CADT;AAKP,OAAO,MAAMC,2BAA2B,GAAGb,cAAc,CACvD,CAACC,UAAD,CADuD,EAEvD,CAAC;AAAEa,EAAAA;AAAF,CAAD,KAAoBA,UAFmC,CAAlD;AAKP,OAAO,MAAMC,yBAAyB,GAAGf,cAAc,CACrD,CAACC,UAAD,CADqD,EAErD,CAAC;AAAEI,EAAAA;AAAF,CAAD,KAAqB,CAAC,CAACA,WAF8B,CAAhD","sourcesContent":["import { createSelector } from \"reselect\";\n\n// const COLLECTION_ID_MAP = {\n//   hats: 1,\n//   sneakers: 2,\n//   jackets: 3,\n//   womens: 4,\n//   mens: 5,\n// };\n\nconst selectShop = (state) => state.shop;\n\nexport const selectShopCollections = createSelector(\n  [selectShop],\n  ({ collections }) => collections\n);\n\nexport const selectCollectionForPreview = createSelector(\n  [selectShopCollections],\n  (collections) =>\n    collections ? Object.keys(collections).map((key) => collections[key]) : []\n);\n\n// when data was array\n// export const selectCollection = (collectionUrlParam) =>\n//   createSelector([selectShopCollections], (collections) =>\n//     collections.find(\n//       (collection) => collection.id === COLLECTION_ID_MAP[collectionUrlParam]\n//     )\n//   );\n\n// after data normalisation (converted to object)\nexport const selectCollection = (collectionUrlParam) =>\n  createSelector([selectShopCollections], (collections) =>\n    collections ? collections[collectionUrlParam] : null\n  );\n\nexport const selectIsCollectionsFetching = createSelector(\n  [selectShop],\n  ({ isFetching }) => isFetching\n);\n\nexport const selectIsCollectionsLoaded = createSelector(\n  [selectShop],\n  ({ collections }) => !!collections\n);\n"]},"metadata":{},"sourceType":"module"}